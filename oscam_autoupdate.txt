
#!/bin/bash

#####OSCAM_Autoupdate

_url=https://friendsforroland.github.io/oscam
_issue="/boot/issue.txt"
_raspi="Raspberry"

#check wget
if [ -e /usr/bin/wget ]; then
echo ""
else
if [ -e /etc/opkg ]; then
opkg install wget > /dev/null 2>&1
elif [ -e /etc/apt/sources.list.d ]; then
apt install wget -y > /dev/null 2>&1
else
  "neither opkg nor apt was found ... bailing out"
  exit 0
fi
fi

_myoscambin=$(ps xuww | grep -i oscam | grep -vE 'grep|tail' | awk '{print $11}'|uniq)
if [[ "$_myoscambin" == "" ]] ; then
echo "No running OSCam found"
exit 0
fi 
_oscambin=$(echo "$_myoscambin" | cut -c $((9 + 1))-)

#compare oscam version
wget -O /tmp/version.txt ${_url}/version.txt > /dev/null 2>&1
_check=/tmp/version.txt
if [ "$(wc -c < "$_check")" -eq 0 ]; then

wget -O /tmp/version.txt ${_url}/version.txt > /dev/null 2>&1
else
echo ""
fi
file="/tmp/version.txt"
search="version="
X=8 
content=$(grep "$search" "$file")

if [ -n "$content" ]; then
  Version_new=$(echo "$content" | cut -c $((X + 1))-)
fi

$_myoscambin -V > /tmp/version2.txt
file2="/tmp/version2.txt"
search2="Version:     "
X=24
content2=$(grep "$search2" "$file2")

if [ -n "$content2" ]; then
  Version_old=$(echo "$content2" | cut -c $((X + 1))-)
  Version_old=$(echo "$Version_old" | cut -c1-5)
fi

  if [[ "$Version_new" != "$Version_old" ]]; then
  echo "Changing your OSCam"
  # kill_oscam
  #for pid in `ps xuww | grep oscam | grep "$_myoscambin" | grep -v grep | awk '{print $2}'`; do
   # kill -9 $pid
  #done
  
    # find arch und backup old oscam 
  #cp ${_myoscambin} ${_myoscambin}-bak
if [ -n "$(uname -m | grep armv)" ]; then
    _arch=open_arm
 elif [ -n "$(uname -m | grep aarch64)" ]; then
    _arch=aarch64
 elif [ -n "$(uname -m | grep mips)" ]; then
    _arch=mipsel
 elif [ -n "$(uname -m | grep x86_64)" ]; then
   wget -O $_myoscambin ${_url}/oscams/oscam-Linux_x86_64-$Version_new > /dev/null 2>&1
   rm /tmp/version* > /dev/null 2>&1
   chmod +x $_myoscambin
   /etc/init.d/softcam.$_oscambin restart > /dev/null 2>&1
   echo "OSCam changed from $Version_old to $Version_new"
   exit 1
 else
      echo -e "\e[31m Sorry, your device does not have the proper Emu \e[0m"
      exit 1
fi

   # replace oscam 
if grep -q "$_raspi" "$_issue" 2>/dev/null; then
  	if [ -n "$(dpkg --print-architecture | grep armhf)" ]; then
    _arch1=arm
 elif [ -n "$(dpkg --print-architecture | grep arm64)" ]; then
    _arch1=aarch64
 else
	echo ""
 fi
	wget -O $_myoscambin ${_url}/oscams/oscam-rpi_${_arch1}-$Version_new > /dev/null 2>&1
    chmod +x $_myoscambin
	/etc/init.d/softcam.$_oscambin restart > /dev/null 2>&1
	# clean tmp
	rm /tmp/version* > /dev/null 2>&1
	echo "OSCam changed from $Version_old to $Version_new"
    exit 0
else
  if [ -e /etc/apt/sources.list.d  ]; then
     systemctl stop $_oscambin.service > /dev/null 2>&1
     wget -O $_myoscambin ${_url}/oscams/oscam-dream_${_arch}-$Version_new > /dev/null 2>&1
     chmod +x $_myoscambin
	 systemctl start $_oscambin.service > /dev/null 2>&1
   else
/etc/init.d/softcam.$_oscambin stop > /dev/null 2>&1
    wget -O $_myoscambin ${_url}/oscams/oscam-${_arch}-$Version_new > /dev/null 2>&1
    chmod +x $_myoscambin
  fi
  /etc/init.d/softcam.$_oscambin restart > /dev/null 2>&1
   echo "OSCam changed from $Version_old to $Version_new"
	fi
	fi

# clean tmp
rm /tmp/version* > /dev/null 2>&1
