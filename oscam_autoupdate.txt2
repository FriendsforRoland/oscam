#!/bin/bash

#####OSCAM_Autoupdate

_url=https://friendsforroland.github.io/oscam
_issue="/boot/issue.txt"
_raspi="Raspberry"
_scriptversion=0

#compare script version
wget -O /tmp/oscam_autoupdate ${_url}/oscam_autoupdate.txt > /dev/null 2>&1
_script_new=$(sed -n '8p' /tmp/oscam_autoupdate)
X=15
_script_new=$(echo "$_script_new" | cut -c $((X + 1))-)
if [[ "${_script_new}" != "${_scriptversion}" ]]; then
cp /tmp/oscam_autoupdate /usr/bin/oscam_autoupdate
chmod +x /usr/bin/oscam_autoupdate
exec "$0" "$@"
fi

ps xuww | grep -i oscam | grep -vE 'grep|tail' | awk '{print $11}'|uniq > /tmp/oscam
ps xuww | grep -i oscam | grep -vE 'grep|tail' | awk '{for (i=11; i<=26; i++) printf "%s%s", $i, (i<26 ? OFS : ORS)}'|uniq > /tmp/oscam_start
_start=$(head -n 1 /tmp/oscam_start)
_myoscambin=$(head -n 1 /tmp/oscam)
if [[ "$_myoscambin" == "" ]] ; then
echo "No running OSCam found"
exit 0
fi 
_oscambin=$(basename "$_myoscambin")

#compare oscam version
wget -O /tmp/version.txt ${_url}/version.txt > /dev/null 2>&1
_check=/tmp/version.txt
if [ "$(wc -c < "$_check")" -eq 0 ]; then

wget -O /tmp/version.txt ${_url}/version.txt > /dev/null 2>&1
else
echo ""
fi
file="/tmp/version.txt"
search="version="
X=8 
content=$(grep "$search" "$file")

if [ -n "$content" ]; then
  Version_new=$(echo "$content" | cut -c $((X + 1))-)
fi

$_myoscambin -V > /tmp/version2.txt
file2="/tmp/version2.txt"
search2="Version:     "
X=24
content2=$(grep "$search2" "$file2")

if [ -n "$content2" ]; then
  Version_old=$(echo "$content2" | cut -c $((X + 1))-)
  Version_old=$(echo "$Version_old" | cut -c1-5)
fi

  if [[ "$Version_new" != "$Version_old" ]]; then
  echo "Changing your OSCam"
 if [ -e /etc/apt/sources.list.d  ]; then
     systemctl stop $_oscambin.service > /dev/null 2>&1
fi
if [ -f /etc/init.d/softcam.$_oscambin ]; then
		/etc/init.d/softcam.$_oscambin stop > /dev/null 2>&1
_file=$(find /etc/init.d/softcam* -type f -exec grep -l "$_oscambin" {} +)
$_file stop > /dev/null 2>&1
		sleep 2
fi
if [ -f /usr/camscript/Ncam_$_oscambin.sh ]; then
		/usr/camscript/Ncam_$_oscambin.sh stop > /dev/null 2>&1
		sleep 2
fi
if [ -f /var/emu/script/oscam ]; then
		/var/emu/script/oscam stop > /dev/null 2>&1
		sleep 2
fi
if [ -f /usr/script/$_oscambin.emu ]; then
		/usr/script/$_oscambin.emu stop > /dev/null 2>&1
		sleep 2
fi
if [ -f /usr/script/${_oscambin}_cam.sh ]; then
		/usr/script/${_oscambin}_cam.sh stop > /dev/null 2>&1
		sleep 2
fi
if [ -f /etc/cam.d/$_oscambin.sh ]; then
		/etc/cam.d/$_oscambin.sh stop > /dev/null 2>&1
		sleep 2
fi
if [ -f /usr/emu_scripts/EGcam_$_oscambin.sh ]; then
		/usr/emu_scripts/EGcam_$_oscambin.sh stop > /dev/null 2>&1
		sleep 2
fi
 killall -9 $_oscambin > /dev/null 2>&1
kill `pidof $_oscambin` > /dev/null 2>&1

    # find arch und backup old oscam 
  #cp ${_myoscambin} ${_myoscambin}-bak
if [ -n "$(uname -m | grep armv)" ]; then
    _arch=open_arm
 elif [ -n "$(uname -m | grep aarch64)" ]; then
    _arch=aarch64
 elif [ -n "$(uname -m | grep mips)" ]; then
    _arch=mipsel
 elif [ -n "$(uname -m | grep x86_64)" ]; then
killall -9 $_oscambin > /dev/null 2>&1
kill `pidof $_oscambin` > /dev/null 2>&1
systemctl stop $_oscambin.service > /dev/null 2>&1
if [ -f /var/emu/script/oscam ]; then
		/var/emu/script/oscam stop > /dev/null 2>&1
		fi
   wget -O $_myoscambin ${_url}/oscams/oscam-Linux_x86_64-$Version_new > /dev/null 2>&1
   rm /tmp/version* > /dev/null 2>&1
   chmod +x $_myoscambin
if [ -f /var/emu/script/oscam ]; then
		/var/emu/script/oscam start > /dev/null 2>&1
		fi
   systemctl start $_oscambin.service > /dev/null 2>&1
   /etc/init.d/softcam.$_oscambin restart > /dev/null 2>&1
   echo "OSCam changed from $Version_old to $Version_new"
   exit 1
 else
      echo -e "\e[31m Sorry, your device does not have the proper Emu \e[0m"
      exit 1
fi

   # replace oscam 
if grep -q "$_raspi" "$_issue" 2>/dev/null; then
  	if [ -n "$(dpkg --print-architecture | grep armhf)" ]; then
    _arch1=arm
 elif [ -n "$(dpkg --print-architecture | grep arm64)" ]; then
    _arch1=aarch64
 else
	echo ""
 fi
	wget -O $_myoscambin ${_url}/oscams/oscam-rpi_${_arch1}-$Version_new > /dev/null 2>&1
    chmod +x $_myoscambin
	/etc/init.d/softcam.$_oscambin start > /dev/null 2>&1
	# clean tmp
	rm /tmp/version* > /dev/null 2>&1
	echo "OSCam changed from $Version_old to $Version_new"
    exit 0
else
  if [ -e /etc/apt/sources.list.d  ]; then
    # systemctl stop $_oscambin.service > /dev/null 2>&1
     wget -O $_myoscambin ${_url}/oscams/oscam-dream_${_arch}-$Version_new > /dev/null 2>&1
     chmod +x $_myoscambin
	 systemctl start $_oscambin.service > /dev/null 2>&1
   else
/etc/init.d/softcam.$_oscambin stop > /dev/null 2>&1
    wget -O $_myoscambin ${_url}/oscams/oscam-${_arch}-$Version_new > /dev/null 2>&1
    chmod +x $_myoscambin
  fi
#bh
if [ -f /usr/camscript/Ncam_$_oscambin.sh ]; then
wget -O /tmp/oscam_update.sh ${_url}/oscam_update.sh > /dev/null 2>&1
camname=$(cat <<EOF
sed -i '3s/.*/CAMNAME=\"OSCam v$Version_new\"/' /tmp/oscam_update.sh
EOF
)
eval $camname > /dev/null 2>&1
bin=$(cat <<EOF
sed -i '4s/.*/binary=\"$_oscambin\"/' /tmp/oscam_update.sh
EOF
)
eval $bin > /dev/null 2>&1
mv /tmp/oscam_update.sh /usr/camscript/Ncam_${_oscambin}.sh
chmod +x /usr/camscript/Ncam_${_oscambin}.sh
#		/usr/camscript/Ncam_$_oscambin.sh start > /dev/null 2>&1
		sleep 2
fi

#egami
if [ -f /usr/emu_scripts/EGcam_$_oscambin.sh ]; then
wget -O /tmp/oscam_update.sh ${_url}/oscam_update.sh > /dev/null 2>&1
camname=$(cat <<EOF
sed -i '3s/.*/CAMNAME=\"OSCam v$Version_new\"/' /tmp/oscam_update.sh
EOF
)
eval $camname > /dev/null 2>&1
bin=$(cat <<EOF
sed -i '4s/.*/binary=\"$_oscambin\"/' /tmp/oscam_update.sh
EOF
)
eval $bin > /dev/null 2>&1
mv /tmp/oscam_update.sh /usr/emu_scripts/EGcam_${_oscambin}.sh
chmod +x /usr/emu_scripts/EGcam_${_oscambin}.sh
#		/usr/emu_scripts/EGcam_$_oscambin.sh start > /dev/null 2>&1
		sleep 2
fi
 if [ -e /etc/apt/sources.list.d  ]; then
     systemctl stop $_oscambin.service > /dev/null 2>&1
fi
#newenigma
if [ -f /usr/script/$_oscambin.emu ]; then
wget -O /tmp/oscam_update.sh ${_url}/oscam_update.sh
camname=$(cat <<EOF
sed -i '3s/.*/EMUNAME=\"OSCam v$Version_new\"/' /tmp/oscam_update.sh
EOF
)
eval $camname
bin=$(cat <<EOF
sed -i '4s/.*/binary=\"$_oscambin\"/' /tmp/oscam_update.sh
EOF
)
eval $bin
mv /tmp/oscam_update.sh /usr/script/${_oscambin}.emu
chmod +x /usr/script/${_oscambin}.emu
#		/usr/script/$_oscambin.emu start > /dev/null 2>&1
		sleep 2
fi

#vti
if [ -f /usr/script/${_oscambin}_cam.sh ]; then
wget -O /tmp/oscam_update.sh ${_url}/oscam_update.sh > /dev/null 2>&1
camname=$(cat <<EOF
sed -i '3s/.*/CAMNAME=\"OSCam v$Version_new\"/' /tmp/oscam_update.sh
EOF
)
eval $camname > /dev/null 2>&1
bin=$(cat <<EOF
sed -i '4s/.*/binary=\"$_oscambin\"/' /tmp/oscam_update.sh
EOF
)
eval $bin > /dev/null 2>&1
mv /tmp/oscam_update.sh /usr/script/${_oscambin}_cam.sh
chmod +x /usr/script/${_oscambin}_cam.sh
#		/usr/script/${_oscambin}_cam.sh start > /dev/null 2>&1
		sleep 2
fi

if [ -f /usr/script/${_oscambin}.sh ]; then
wget -O /tmp/oscam_update.sh ${_url}/oscam_update.sh > /dev/null 2>&1
camname=$(cat <<EOF
sed -i '3s/.*/CAMNAME=\"OSCam v$Version_new\"/' /tmp/oscam_update.sh
EOF
)
eval $camname > /dev/null 2>&1
bin=$(cat <<EOF
sed -i '4s/.*/binary=\"$_oscambin\"/' /tmp/oscam_update.sh
EOF
)
eval $bin > /dev/null 2>&1
mv /tmp/oscam_update.sh /usr/script/${_oscambin}.sh
chmod +x /usr/script/${_oscambin}.sh
#		/usr/script/${_oscambin}.sh start > /dev/null 2>&1
		sleep 2
fi

if [ -f /usr/script/${_oscambin}.emu ]; then
wget -O /tmp/oscam_update.sh ${_url}/oscam_update.sh > /dev/null 2>&1
camname=$(cat <<EOF
sed -i '3s/.*/EMUNAME=\"OSCam v$Version_new\"/' /tmp/oscam_update.sh
EOF
)
eval $camname > /dev/null 2>&1
bin=$(cat <<EOF
sed -i '4s/.*/binary=\"$_oscambin\"/' /tmp/oscam_update.sh
EOF
)
eval $bin > /dev/null 2>&1
mv /tmp/oscam_update.sh /usr/script/${_oscambin}.emu
chmod +x /usr/script/${_oscambin}.emu
#		/usr/script/${_oscambin}.emu start > /dev/null 2>&1
		sleep 2
fi
#n
if [ -f /etc/cam.d/$_oscambin.sh ]; then
wget -O /tmp/oscam_update.sh ${_url}/oscam_update.sh > /dev/null 2>&1
camname=$(cat <<EOF
sed -i '3s/.*/CAMNAME=\"OSCam v$Version_new\"/' /tmp/oscam_update.sh
EOF
)
eval $camname > /dev/null 2>&1
bin=$(cat <<EOF
sed -i '4s/.*/binary=\"$_oscambin\"/' /tmp/oscam_update.sh
EOF
)
eval $bin > /dev/null 2>&1
mv /tmp/oscam_update.sh /etc/cam.d/${_oscambin}.sh
chmod +x /etc/cam.d/${_oscambin}.sh
#		/etc/cam.d/$_oscambin.sh start > /dev/null 2>&1
		sleep 2
fi
if [ -f /etc/init.d/softcam.$_oscambin ]; then
		#/etc/init.d/softcam.$_oscambin start > /dev/null 2>&1
		#$_file start > /dev/null 2>&1
		sleep 2
fi
 if [ -e /etc/apt/sources.list.d  ]; then
     systemctl start $_oscambin.service > /dev/null 2>&1
fi

   echo "OSCam changed from $Version_old to $Version_new"
  
 else
 echo "OSCam up2date"
 fi
 eval $_start > /dev/null 2>&1
rm /tmp/version* > /dev/null 2>&1
rm /tmp/oscam* > /dev/null 2>&1
